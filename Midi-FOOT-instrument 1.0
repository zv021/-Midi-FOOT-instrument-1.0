//Midi-FOOT-instrument 1.0
//by zoubair vahed :02/2013
// SITE
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
*/ 

 /* To send MIDI, attach a MIDI out jack (female DIN-5) to Arduino.
DIN-5 pinout is:                               _____ 
   pin 2 - Gnd                               /       \
   pin 4 - 220 ohm resistor to +5V          | 3     1 |  MIDI jack
   pin 5 - Arduino D1 (~3)                  |  5   4  |
   all other pins - unconnected              \___2___/
   */              
#define ledPin     13 // led for midi out status

#include <SoftwareSerial.h>
SoftwareSerial midiSerial(2, 3);// digital pins that we'll use for soft serial RX & TX

// define the  Analogue pins we use
const int FSR1 = A0; 
const int FSR2 = A1;
const int FSR3 = A2;

int outputValue = 0;  // variable to store the value coming in from the sensor 
 //int MyNote =  0; // The MIDI note value to be played
 //int MyNote1 = 0; // The MIDI note value to be played
 //int MyNote2 = 0; // The MIDI note value to be played

 int noteIncrement1 [] = {12,13,14,16,17,18,19,20,21,22,23}; // MIDI notes increment
 int noteIncrement2 [] = {36,37,38,39,40,41,42,43,44,45,46,47}; // MIDI notes increment
 int noteIncrement3 [] = {60,61,62,63,64,65,66,67,68,69,70,71}; // MIDI notes increment

 int notelength = 7;
 int AnalogValue = 0; // value from analog input
 int note = 0;
   
 // End of constant definitions

void setup() { //run one time when the Arduino first powers up
 
 pinMode(ledPin, OUTPUT);
 Serial.begin(9600);          // configure the serial connection:
 midiSerial.begin(31250);     // Default speed of MIDI serial port

}

void loop() { //This next bit of code runs continuously
    
    // Deal with the 1st FSR 
       AnalogValue = analogRead(FSR1); // read the value from the sensor
       int MyNote = (int) map(AnalogValue, 0, 1023, 0, 11);
           if (AnalogValue > 100 ) {  //if the value is greater than 100
        note = 50+ noteIncrement1[MyNote];
      //   analogWrite(note, outputValue);
        noteOn(0x90, note, 0x40); //play note value  
        noteOff(0x90,note, 0); // Stop playing
         delay(100); // wait
           }
    
    // Deal with the 2nd FSR 
  AnalogValue = analogRead(FSR2); // read the value from the sensor
       int MyNote1 = (int) map(AnalogValue, 0, 1023, 0, 12);
           if (AnalogValue > 100 ) { //if the value is greater than 100
        note = 50+ noteIncrement2[MyNote1];
      //   analogWrite(note, outputValue);
        noteOn(0x90, note, 0x40); //play note value  
        noteOff(0x90,note, 0); // Stop playing
        delay(100); // wait
           }

    // Deal with the 3rd FSR 
    AnalogValue = analogRead(FSR3); // read the value from the sensor
       int MyNote2 = (int) map(AnalogValue, 0, 1023, 0, 12);
           if (AnalogValue> 100 ) { //if the value is greater than 100
        note = 50+ noteIncrement3[MyNote2];
      //   analogWrite(note, outputValue);
        noteOn(0x90, note, 0x40); //play note value
        noteOff(0x90,note, 0); // Stop playing
        delay(100); // wait
           }
       
         //noteOn(0x90, lastNotePlayed, 0x00);
        //0x00 means velocity is zero
      
    
       // lastSwitchState = currentSwitchState; // save switch state for next round
    }
    
  // Send a MIDI note-on message.  Like pressing a piano key
 // channel ranges from 0-15
void noteOn(byte channel, byte note, byte velocity) {
  midiMsg( (0x90 | channel), note, velocity);
}

 // Send a MIDI note-off message.  Like releasing a piano key
void noteOff(byte channel, byte note, byte velocity) {
  midiMsg( (0x80 | channel), note, velocity);
}

 // Send a general MIDI message
void midiMsg(byte cmd, byte data1, byte data2) {
   midiSerial.write(cmd);
   midiSerial.write(data1);
   midiSerial.write(data2);
   delay(100);
  //prints the values in the serial monitor so we can see what note we're playing
  // Serial.print("cmd: ");
  //Serial.print(cmd);
  //Serial.print(", data1: ");
  //Serial.print(data1);
  //Serial.print(", data2: ");
  //erial.println(data2);
  //digitalWrite(ledPin,LOW);
}
